spring:
  cloud:
    gateway:
      routes:
        - id: reservation-service
          uri: lb://reservation-service
          predicates:
            - Path=/reservations/**
          filters:
            - TokenRelay=
            - RemoveRequestHeader=Cookie
    security:
      oauth2:
        client:
          registration:
            keycloak:
              provider: keycloak
              client-id: ${KEYCLOAK_CLIENT_ID:spring-micro-gateway}
              client-secret: ${client-secret:1650bc4f-6705-480b-95e8-bf3f9997f528}
              authorization-grant-type: authorization_code
              redirect-uri: http://host.docker.internal:9000/login/oauth2/code/keycloak
              scope: openid
          provider:
            keycloak:
              authorization-uri: ${keycloak.server-url:http://host.docker.internal:8080/auth}/realms/${keycloak.realm:realm-cec}/protocol/openid-connect/auth
              token-uri: ${keycloak.server-url:http://host.docker.internal:8080/auth}/realms/${keycloak.realm:realm-cec}/protocol/openid-connect/token
              user-info-uri: ${keycloak.server-url:http://host.docker.internal:8080/auth}/realms/${keycloak.realm:realm-cec}/protocol/openid-connect/userinfo
              jwk-set-uri: ${keycloak.server-url:http://host.docker.internal:8080/auth}/realms/${keycloak.realm:realm-cec}/protocol/openid-connect/certs
              user-name-attribute: name
              user-info-authentication-method: header
        resourceserver:
          jwt:
            jwk-set-uri: ${keycloak.server-url:http://host.docker.internal:8080/auth}/realms/${keycloak.realm:realm-cec}/protocol/openid-connect/certs

server:
  port: ${SERVER_PORT:9000}

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_DEFAULT_ZONE_URL:http://localhost:8761/eureka/}
